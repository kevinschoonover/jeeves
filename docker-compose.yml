version: '3'

services:
  db:
    image: 'postgres'
    networks:
      - db_nw
    environment:
      - POSTGRES_USER=jeeves
      - POSTGRES_PASSWORD=jeeves
  celery:
    build: './recommender/celery_app'
    volumes:
      - ./recommender/:/recommender
      - ./recommender/celery_app:/server
    networks:
      - redis_nw
      - web_nw
    environment:
      - API_HOST=web
      - API_PORT=3000
    depends_on:
      - web
  redis:
    image: 'redis:alpine'
    ports:
      - '6379:6379'
    networks:
      - redis_nw
  recommender:
    build: './recommender'
    ports:
      - '5000:5000'
    volumes:
      - ./recommender/:/server
    depends_on:
      - web
  web:
    build:
      context: ./server
    volumes:
      - ./server/:/server
      - node_modules:/server/node_modules
    networks:
      - db_nw
      - web_nw
    depends_on:
      - db
    environment:
      - DB_HOST=db
      - DB_USERNAME=jeeves
      - DB_PASSWORD=jeeves
  nginx:
    image: 'nginx'
    restart: always
    ports:
      - '80:80'
    volumes:
      - ./.docker/conf.d:/etc/nginx/conf.d
    networks:
      - web_nw
    depends_on:
      - web
networks:
  db_nw:
    driver: bridge
  web_nw:
    driver: bridge
  redis_nw:
    driver: bridge
volumes:
  node_modules: